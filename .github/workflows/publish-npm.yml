name: Publish NPM Package

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@clockwisesoftware'

      - name: add company prefix to GitHub Package
        run: |
          # Update package.json for GitHub Packages
          jq '.name = "@clockwisesoftware/deploy-notify-slack" | .publishConfig.registry = "https://npm.pkg.github.com/" | .publishConfig.access = "public"' package.json > package-temp.json
          mv package-temp.json package.json

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Install package
        run: npm i --location=global @clockwisesoftware/deploy-notify-slack@$(npm run version --silent)
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Notify Slack
        run: VERSION=$(npm run version --silent) && SLACK_WEBHOOK_URL=${{secrets.SLACK_WEBHOOK_URL}} STAGE=staging TITLE="New version deployed to GitHub packages [package](https://github.com/ClockwiseSoftware/deploy-notify-slack/pkgs/npm/deploy-notify-slack)" VERSION=$VERSION FAILS_IF_NOT_SENT=true node $(npm list -g @clockwisesoftware/deploy-notify-slack --parseable)/notify.js

  publish-npm:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Install package
        run: npm i --location=global deploy-notify-slack@$(npm run version --silent)

      - name: Notify Slack
        run: VERSION=$(npm run version --silent) && SLACK_WEBHOOK_URL=${{secrets.SLACK_WEBHOOK_URL}} STAGE=production TITLE="New version deployed to NPM [package](https://www.npmjs.com/package/deploy-notify-slack)" VERSION=$VERSION FAILS_IF_NOT_SENT=true node $(npm list -g deploy-notify-slack --parseable)/notify.js
